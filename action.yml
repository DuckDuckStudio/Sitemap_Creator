name: Sitemap Creator Stable
description: GitHub Action 🚀 for creating and updating sitemaps in your repository.
author: 鸭鸭「カモ」(@DuckDuckStudio)

branding:
  color: yellow
  icon: book

keywords:
  [
    'sitemap',
    'website',
    'seo',
    'creator',
    'updater',
    'generator',
    'urls'
  ]

inputs:
  location:
    required: false
    description: 网站地图的存放位置 (例如 docs/sitemap.xml)
    default: "./sitemap.xml"

  token:
    required: false
    description: 用于创建更新网站地图的拉取请求的 Token (不指定则使用 github.token)
    default: ${{ github.token }}

  timezone:
    required: false
    description: 设置生成时使用的时区 (不指定则使用 Asia/Shanghai (UTF+8))
    default: "Asia/Shanghai"

  basic_link:
    required: false
    description: 指向你网站的基础链接 (不指定则使用 GitHub Page 链接, 结尾不要带 / )
    default: https://${{ github.event.repository.owner.login }}.github.io/${{ github.event.repository.name }}

  file_type:
    required: false
    description: 网页文件的类型 (例如使用 docsify 部署的就是 md，可指定多个类型)
    default: "html,md"

  ignore_file:
    required: false
    description: 指定哪些文件不包含在网站地图中
    default: "啥都没有" # 应该不会有人要这个，留空会忽略所有文件

  website_path:
    required: true
    description: 你的网站内容的位置 (例如 . (根目录) 或 docs)
    default: "./"

  base_branch:
    required: false
    description: 仓库主分支 (main，master 等)
    default: main

  debug:
    required: false
    description: 控制调试输出的开关
    default: false

  label:
    required: false
    description: 创建拉取请求时添加的标签

  auto_merge:
    required: false
    description: 设置启用自动合并的类型 (不指定则不启用自动合并，可以使用 merge、rebase、squash)

  update:
    required: false
    description: 指定更新网站地图的方式 (直接提交或拉取请求)
    default: 拉取请求

  reviewer:
    required: false
    description: 创建拉取请求时指定的审查者

  author_name:
    required: false
    description: 更新提交的撰写者名
    default: "github-actions[bot]"

  author_email:
    required: false
    description: 更新提交的撰写者邮箱
    default: "41898282+github-actions[bot]@users.noreply.github.com"

runs:
  using: composite
  steps:
    - name: 检出仓库
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # 检出完整记录
        # ref: ${{ inputs.base_branch }} 不确定这个要不要加，后续看情况吧

    - name: 设置 Node.js 环境
      uses: actions/setup-node@v4
      with:
        node-version: "latest"

    - name: 设置时区
      shell: bash
      if: ${{ runner.os == 'Linux' }}
      env:
        TZ: ${{ inputs.timezone }}
      run: sudo timedatectl set-timezone $TZ

    - name: 设置时区
      shell: pwsh
      if: ${{ runner.os == 'Windows' }}
      env:
        TZ: ${{ inputs.timezone }}
      run: |
        $ErrorActionPreference = 'Stop' # 有错误就停止
        $tz = [System.TimeZoneInfo]::FindSystemTimeZoneById($env:TZ) # 获取时区
        [System.TimeZoneInfo]::Local = $tz # 设置时区

    - name: 设置时区
      shell: bash
      if: ${{ runner.os == 'macOS' }}
      env:
        TZ: ${{ inputs.timezone }}
      run: sudo systemsetup -settimezone $TZ

    - name: 创建 Sitemap
      shell: bash
      run: |
        # 获取生成脚本
        git clone https://github.com/DuckDuckStudio/Sitemap_Creator -b main # 稳定版
        cp Sitemap_Creator/index.mjs Sitemap_Creator.mjs
        rm -r Sitemap_Creator

        # 生成网站地图
        node Sitemap_Creator.mjs
        rm Sitemap_Creator.mjs

    - name: 提交并推送 sitemap.xml
      shell: bash
      env:
        # 这几乎包含了所有的参数
        GH_TOKEN: ${{ inputs.token }}
        LABELS: ${{ inputs.label }}
        DEBUG: ${{ inputs.debug }}
        AUTO_MERGE: ${{ inputs.auto_merge }}
        LOCATION: ${{ inputs.location }}
        UPDATE: ${{ inputs.update }}
        REVIEWER: ${{ inputs.reviewer }}
        TOKEN: ${{ github.token }}
        AUTHOR_NAME: ${{ inputs.author_name }}
        AUTHOR_EMAIL: ${{ inputs.author_email }}
        BASE_BRANCH: ${{ inputs.base_branch }}
        # 生成时还需要的参数
        BASIC_LINK: ${{ inputs.basic_link }}
        FILE_TYPE: ${{ inputs.file_type }}
        IGNORE_FILE: ${{ inputs.ignore_file }}
        WEBSITE_PATH: ${{ inputs.website_path }}
      run: |
        node Sitemap_Push.mjs
